name: CI/CD 

on:
  push:
    branches:
      - main  # Se puede ajustar al nombre de tu rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Descarga el código del repositorio

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Ajusta la versión de Python según tus necesidades

    - name: Install dependencies
      working-directory: src/solemne1
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install  # Instala las dependencias de Poetry

    - name: Install Ruff
      run: |
        pip install ruff  # Instala Ruff como la herramienta de linting

    - name: Run Linting with Ruff
      run: |
        ruff check src/solemne1 

    - name: Run tests
      working-directory: src/solemne1
      run: |
        poetry run pytest  # Ejecuta las pruebas unitarias

    - name: Build Docker image
      run: |
        docker build -t fastapi-app .  # Construye la imagen Docker

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  # Usa los secretos de GitHub
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Tag Docker image
      run: |
        docker tag solemne1 ${{ secrets.DOCKERHUB_USERNAME }}/solemne1:latest  # Etiqueta la imagen

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/solemne1:latest  # Publica la imagen en Docker Hub
